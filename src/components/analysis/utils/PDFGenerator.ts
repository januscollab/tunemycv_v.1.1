
import jsPDF from 'jspdf';

export default class PDFGenerator {
  generatePDF(result: any) {
    const doc = new jsPDF();
    const pageWidth = doc.internal.pageSize.width;
    const margin = 20;
    const lineHeight = 7;
    let currentY = margin;

    // Helper function to add text with word wrapping
    const addWrappedText = (text: string, x: number, y: number, maxWidth: number, fontSize = 12) => {
      doc.setFontSize(fontSize);
      const words = text.split(' ');
      let line = '';
      let currentLineY = y;

      for (let i = 0; i < words.length; i++) {
        const testLine = line + words[i] + ' ';
        const testWidth = doc.getStringUnitWidth(testLine) * fontSize / doc.internal.scaleFactor;
        
        if (testWidth > maxWidth && i > 0) {
          doc.text(line.trim(), x, currentLineY);
          line = words[i] + ' ';
          currentLineY += lineHeight;
        } else {
          line = testLine;
        }
      }
      
      if (line.trim()) {
        doc.text(line.trim(), x, currentLineY);
        currentLineY += lineHeight;
      }
      
      return currentLineY;
    };

    // Header
    doc.setFontSize(20);
    doc.setFont('helvetica', 'bold');
    doc.text('CV COMPATIBILITY ANALYSIS REPORT', pageWidth / 2, currentY, { align: 'center' });
    currentY += 15;

    // Job details
    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.text('Position Details', margin, currentY);
    currentY += 10;

    doc.setFontSize(12);
    doc.setFont('helvetica', 'normal');
    if (result.job_title || result.position) {
      doc.text(`Job Title: ${result.job_title || result.position}`, margin, currentY);
      currentY += lineHeight;
    }
    if (result.company_name && result.company_name !== 'Company') {
      doc.text(`Company: ${result.company_name}`, margin, currentY);
      currentY += lineHeight;
    }
    doc.text(`Analysis Date: ${new Date(result.created_at).toLocaleDateString()}`, margin, currentY);
    currentY += 15;

    // Compatibility Score
    doc.setFontSize(14);
    doc.setFont('helvetica', 'bold');
    doc.text('COMPATIBILITY SCORE', margin, currentY);
    currentY += 10;

    doc.setFontSize(24);
    doc.setFont('helvetica', 'bold');
    doc.text(`${result.compatibility_score || result.compatibilityScore}%`, margin, currentY);
    currentY += 15;

    // Executive Summary
    const summaryText = result.executive_summary || result.executiveSummary?.overview;
    if (summaryText) {
      doc.setFontSize(14);
      doc.setFont('helvetica', 'bold');
      doc.text('EXECUTIVE SUMMARY', margin, currentY);
      currentY += 10;

      doc.setFontSize(12);
      doc.setFont('helvetica', 'normal');
      currentY = addWrappedText(summaryText, margin, currentY, pageWidth - 2 * margin);
      currentY += 10;
    }

    // Add more sections...
    this.addKeywordsSection(doc, result, margin, pageWidth, currentY, addWrappedText, lineHeight);
    this.addStrengthsSection(doc, result, margin, pageWidth, currentY, addWrappedText, lineHeight);
    this.addWeaknessesSection(doc, result, margin, pageWidth, currentY, addWrappedText, lineHeight);
    this.addRecommendationsSection(doc, result, margin, pageWidth, currentY, addWrappedText, lineHeight);

    // Footer
    const pageCount = doc.getNumberOfPages();
    for (let i = 1; i <= pageCount; i++) {
      doc.setPage(i);
      doc.setFontSize(10);
      doc.setFont('helvetica', 'normal');
      doc.text('Generated by TuneMyCV.com', pageWidth / 2, doc.internal.pageSize.height - 10, { align: 'center' });
      doc.text(`Page ${i} of ${pageCount}`, pageWidth - margin, doc.internal.pageSize.height - 10, { align: 'right' });
    }

    // Save the PDF
    const fileName = `CV_Analysis_Report_${result.job_title || result.position || 'Report'}_${new Date().toISOString().split('T')[0]}.pdf`;
    doc.save(fileName);
  }

  private addKeywordsSection(doc: any, result: any, margin: number, pageWidth: number, currentY: number, addWrappedText: any, lineHeight: number) {
    // Keywords section implementation
  }

  private addStrengthsSection(doc: any, result: any, margin: number, pageWidth: number, currentY: number, addWrappedText: any, lineHeight: number) {
    // Strengths section implementation
  }

  private addWeaknessesSection(doc: any, result: any, margin: number, pageWidth: number, currentY: number, addWrappedText: any, lineHeight: number) {
    // Weaknesses section implementation
  }

  private addRecommendationsSection(doc: any, result: any, margin: number, pageWidth: number, currentY: number, addWrappedText: any, lineHeight: number) {
    // Recommendations section implementation
  }
}
